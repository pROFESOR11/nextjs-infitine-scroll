name: CI/CD
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Setup Node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Build
        run: |
          yarn install --frozen-lockfile
          npm run bundle

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Run Tests Locally
        needs: [build]
        run: npm run test

  vercel-deploy-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Staging
        needs: [build, unit-tests]
        id: deploy-vercel-staging
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_TL_ENGINE }}
          scope: ${{ secrets.VERCEL_ORG_ID }}

  vercel-deploy-production:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production
        uses: amondnet/vercel-action@v20
        id: deploy-vercel-production
        needs: [build, unit-tests]
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_TL_ENGINE }}
          vercel-args: '--prod'
          scope: ${{ secrets.VERCEL_ORG_ID }}
